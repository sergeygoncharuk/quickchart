


{ // QUICKCHART WITH ADJUSTED +1,5 M TIDE
  type: 'line',
  data: {
    labels: Array.from({length:24}, (_,i)=>i),
    datasets: [


{
  label: 'High/Low Peaks',
  type: 'scatter',
  data: [
    { x: 3.50,  y: 1.65, label: '1.75 m\n02:59' },
    { x: 9.12,  y: 6.43, label: '6.23 m\n09:00' },
    { x: 16.03, y: 1.50, label: '1.50 m\n16:00' },
    { x: 21.60, y: 6.16, label: '6.16 m\n21:50' }
  ],
  backgroundColor: 'rgb(54, 162, 235)',
  borderColor: 'white',
  borderWidth: 2,
  pointRadius: 8,
  pointStyle: 'circle',
  showLine: false,
  datalabels: {
    align: 'top',
    anchor: 'end',
    offset: 20,             // ðŸ‘ˆ move label 10 pixels up
    font: { size: 30, weight: 'normal' },
    color: 'grey',
    backgroundColor: 'white',  // white background
    borderColor: 'grey',         // red border
    borderWidth: 1,
    borderRadius: 4,
    padding: 4,
    formatter: function(value) {
      return value.label ? value.label.split('\n') : '';
    }
  }
},



{
  label: 'Tide now red dot',
  type: 'scatter',
  data: [
    { x: 6.02, y: 3.87, label: '3.87 m\n06:06' }
  ],
  backgroundColor: 'red',
  borderColor: 'white',
  borderWidth: 2,
  pointRadius: 9,
  pointStyle: 'circle',
  showLine: false,
  datalabels: {
    align: 'top',
    anchor: 'end',
    offset: -200,             // ðŸ‘ˆ move label 10 pixels up
    font: { size: 30, weight: 'normal' },
    color: 'red',
    backgroundColor: 'white',  // white background
    borderColor: 'red',         // red border
    borderWidth: 1,
    borderRadius: 4,
    padding: 4,
    formatter: function(value) {
      return value.label ? value.label.split('\n') : '';
    }
  }
},


      // ðŸ‘‡ Added grey dotted line
{
  type: 'line',
  label: 'Tide',
  borderColor: 'rgba(240,240,240,0.9',
  borderWidth: 0,
  borderDash: [6, 6],
  fill: true,  // no fill
  data: [2.56, 1.58, 0.75, 0.19, 0.22, 1.06, 2.38, 3.66, 4.54, 4.90, 4.77, 4.17, 3.16, 2.04, 1.09, 0.35, 0.02, 0.46, 1.59, 2.90, 3.95, 4.54, 4.63, 4.23],
backgroundColor: getGradientFillHelper('vertical', ["rgba(61,153,209,6.0)", "rgba(61,153,209,0.5)", "rgba(247,251,253,0.1)"]),
        pointRadius: 0,
        tension: 0.4
},

      {
        type: 'line',
        label: 'Tide + 1.5 m',
        borderColor: 'rgb(54, 162, 235)',
        borderWidth: 1,
        fill: true,
        data: [4.06,3.08,2.25,1.69,1.72,2.56,3.88,5.16,6.04,6.40,6.27,5.67,4.66,3.54,2.59,1.85,1.52,1.96,3.09,4.40,5.45,6.04,6.13,5.73],
backgroundColor: getGradientFillHelper('vertical', ["rgba(61,153,209,1.0)", "rgba(61,153,209,0.8)", "rgba(247,251,253,0.7)"]),
        pointRadius: 0,
        tension: 0.4
      },
      
      
      // ðŸ‘‡ Added vertical bars dataset
      {
        type: 'bar',
        label: 'Hourly Bars',
  data: [
    {x: 0.5, y: 8}, {x: 1.5, y: 0}, {x: 2.5, y: 8}, {x: 3.5, y: 0},
    {x: 4.5, y: 8}, {x: 5.5, y: 0}, {x: 6.5, y: 8}, {x: 7.5, y: 0},
    {x: 8.5, y: 8}, {x: 9.5, y: 0}, {x:10.5, y: 8}, {x:11.5, y: 0},
    {x:12.5, y: 8}, {x:13.5, y: 0}, {x:14.5, y: 8}, {x:15.5, y: 0},
    {x:16.5, y: 8}, {x:17.5, y: 0}, {x:18.5, y: 8}, {x:19.5, y: 0},
    {x:20.5, y: 8}, {x:21.5, y: 0}, {x:22.5, y: 8}
  ],
  backgroundColor: 'rgba(200,200,200,0.2',
        borderColor: 'rgba(200,200,200,0.2',
        borderWidth: 0,
        barPercentage: 1,
        categoryPercentage: 1.0,
        order: 0   // ensure bars render behind scatter & line if needed
      }

    ]
  },
  options: {
    scales: {
      x: {
    type: 'linear',   // ðŸ‘ˆ linear axis for fractional x
    min: 0,
    max: 23,
       offset: false,           // ðŸ‘ˆ remove extra space before first and after last tick      
        ticks: {
          stepSize: 1,       // show every integer tick
          autoSkip: false,
          maxRotation: 0,
          minRotation: 0,
          font: { size: 30 }   // ðŸ‘ˆ set x-axis tick font size
        },
    grid: {
      display: false   // ðŸ‘ˆ hide vertical gridlines
    }        
      },
      y: {
        beginAtZero: true,
        max: 8,
          ticks: {
          callback: function(value) { return value.toFixed(0) + ' m'; },
          font: { size: 30 }   // ðŸ‘ˆ set y-axis tick font size
        }
      }
    },
    plugins: {
      title: {
        display: true,
        text: 'Tide Taressa',
        font: { size: 50 },
        color: 'grey',
        padding: { top: 10, bottom: 20 }
      },
      subtitle: {
        display: true,
        text: '10 Sep 06:06 UTC',
        font: { size: 30 },
        color: 'grey',
        padding: { top: -10, bottom: 10 }
      },
      legend: {
        position: 'bottom',
        labels: {
          filter: function(item) { return item.text !== 'Tide + 1.5 m'; },
          filter: function(item) { return item.text !== 'Tide now red dot'; },
          filter: function(item) { return item.text !== 'Hourly Bars'; },          
          filter: function(item) { return item.text !== 'High/Low Peaks'; }         
        }
      },
      annotation: {
        annotations: {
/*          // green safe zone
          safeZone: {
            type: 'box',
            yMin: 5.0,
            yMax: 8.0,
            xMin: 0,
            xMax: 23,
            backgroundColor: 'rgba(0, 200, 0, 0.1)',
            borderWidth: 0
          },
*/          
          
          lineToDotHorizontal: { 
            type: 'line',
            xMin: 0, xMax: 6.02,
            yMin: 3.87, yMax: 3.87,
            borderColor: 'red',
            borderWidth: 1,
            borderDash: [10, 10]
          },
          lineToDotVertical: { 
            type: 'line',
            xMin: 6.02, xMax: 6.02,
            yMin: 0, yMax: 3.87,
            borderColor: 'red',
            borderWidth: 1,
            borderDash: [10, 10]
          },
          
    // ðŸ‘‡ Blue dotted horizontal level 5 m (y=5)
    greenLineY5: {
      type: 'line',
      yMin: 5,
      yMax: 5,
      xMin: 0,
      xMax: 23,
      borderColor: 'rgb(54, 162, 235)',
      borderWidth: 2,
      borderDash: [6, 6]
    },

        }
      },
      datalabels: {
        align: 'top',
        anchor: 'end',
        font: { size: 14, weight: 'bold' },
        color: 'blue',
        formatter: function(value) {
          return value.label || '';
        }
      }
    }
  },
  plugins: ["chartjs-plugin-annotation", "chartjs-plugin-datalabels"]
}
